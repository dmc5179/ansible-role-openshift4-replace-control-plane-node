---

- name: Log in (obtain access token)
  community.okd.openshift_auth:
    host: '{{ k8s_host }}'
    username: '{{ k8s_username }}'
    password: '{{ k8s_password }}'
    validate_certs: '{{ k8s_ssl_enabled }}'
  register: openshift_auth_results

- name: Find etcd secrets for master
  community.kubernetes.k8s_info:
    host: '{{ k8s_host }}'
    api_key: '{{ openshift_auth_results.openshift_auth.api_key }}'
    validate_certs: '{{ k8s_ssl_enabled }}'
    namespace: 'openshift-etcd'
    api_version: 'v1'
    kind: 'Secret'
    wait: true
  register: all_secrets

- name: Find secrets for {{ master_to_replace }}
  set_fact:
    etcd_secrets: "{{ etcd_secrets }} + [ '{{ item.metadata.name }}' ]"
  when: ( item.metadata.name is match(".*{{master_to_replace}}.*") )
  loop: "{{ all_secrets.resources }}"
  no_log: true

- name: Get control plane machine config pool
  community.kubernetes.k8s_info:
    host: '{{ k8s_host }}'
    api_key: '{{ openshift_auth_results.openshift_auth.api_key }}'
    validate_certs: '{{ k8s_ssl_enabled }}'
    namespace: 'openshift-machine-api'
    api_version: 'machineconfiguration.openshift.io/v1'
    kind: 'MachineConfigPool'
    name: 'master'
    wait: true
  register: master_mc

#- name: Display control plane machine config pool info
#  debug:
#    var: master_mc

- name: Fail if master machine config pool is not ready
  fail:
    msg: "Master Machine config is not ready"
  when: >
    ( not master_mc.resources[0].status.readyMachineCount == master_mc.resources[0].status.machineCount ) or
    ( master_mc.resources[0].status.degradedMachineCount > 0 ) or
    ( master_mc.resources[0].status.unavailableMachineCount > 0 )

- name: Get worker machine config pool
  community.kubernetes.k8s_info:
    host: '{{ k8s_host }}'
    api_key: '{{ openshift_auth_results.openshift_auth.api_key }}'
    validate_certs: '{{ k8s_ssl_enabled }}'
    namespace: 'openshift-machine-api'
    api_version: 'machineconfiguration.openshift.io/v1'
    kind: 'MachineConfigPool'
    name: 'worker'
    wait: true
  register: worker_mc

- name: Fail if worker machine config pool is not ready
  fail:
    msg: "Worker Machine config is not ready"
  when: >
    ( not worker_mc.resources[0].status.readyMachineCount == worker_mc.resources[0].status.machineCount ) or
    ( worker_mc.resources[0].status.degradedMachineCount > 0 ) or
    ( worker_mc.resources[0].status.unavailableMachineCount > 0 )

- name: Fetch machine config of control plane node to be replaced
  community.kubernetes.k8s_info:
    host: '{{ k8s_host }}'
    api_key: '{{ openshift_auth_results.openshift_auth.api_key }}'
    validate_certs: '{{ k8s_ssl_enabled }}'
    namespace: 'openshift-machine-api'
    api_version: 'machine.openshift.io/v1beta1'
    kind: 'Machine'
    name: '{{ master_to_replace }}'
    wait: true
  register: master_machine

#- name: Show master machine config
#  debug:
#    var: master_machine

- name: Write master machine config json to file
  copy:
    content: '{{ master_machine }}'
    dest: '/tmp/master_mc.json'
    force: true

- name: Remove keys from master machine config
  shell: >
    jq '.resources | map(del(.status, .metadata.managedFields, .spec.providerID, .metadata.annotations, .metadata.generation, .metadata.resourceVersion, .metadata.uid))' '/tmp/master_mc.json'
  register: new_master_mc

- name: Write master machine config json to file
  copy:
    content: '{{ new_master_mc.stdout }}'
    dest: '/tmp/master_mc.json'
    force: true

- name: Change 'metadata.name' to new name
  shell: >
    jq '.metadata.name = "{{ replacement_master }}"' /tmp/master_mc.json
  register: new_master_mc

- name: Write master machine config json to file
  copy:
    content: '{{ new_master_mc.stdout }}'
    dest: '/tmp/master_mc.json'
    force: true

- name: Update the 'metadata.selfLink' to new name from 'metadata.name'
  replace:
    path: '/tmp/master_mc.json'
    regexp: '{{ master_to_replace }}'
    replace: '{{ replacement_master }}'

# TODO

#Â oc delete machine XXXXX-js44d-master-X -n openshift-machine-api
# Wait a minute, then check that all operators are available, wait until they are, some will be degraded

#oc get pods -n openshift-etcd | grep -v etcd-quorum-guard | grep etcd
#oc rsh -n openshift-etcd etcd-ip-10-0-142-208.ec2.internal
#etcdctl member list -w table
#etcdctl member remove <ID>
#etcdctl member list -w table
#exit

# Check that all operators are available, wait until they are, some will be degraded

#oc apply -f new-master-machine-X.yaml
